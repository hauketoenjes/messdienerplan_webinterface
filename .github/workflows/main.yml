# This is a basic workflow to help you get started with Actions

name: Flutter CD
on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build:
    name: Projekt bauen
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v2
      - 
        uses: subosito/flutter-action@v1
        with:
          channel: beta
      - 
        name: Flutter Web aktivieren
        run: flutter config --enable-web
      - 
        name: Pakete herunterladen
        run: flutter pub get
        # Flutter Porjekt wird in den Ordner build/web gebaut
      - 
        name: Projekt bauen
        run: flutter build web
        # Lade die Artefakte aus dem Ordner build/web/ hoch
      - 
        uses: actions/upload-artifact@master
        with:
          name: flutter artifacts
          path: build/web/
        
  build-and-push:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/hauketoenjes/messdienerplan_webinterface
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - 
        name: Flutter Artefakte herunterladen
        uses: actions/download-artifact@master
        with:
          name: flutter artifacts
          path: build/web
       
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PUSH }}
      -
         name: Build and push
         uses: docker/build-push-action@v2
         with:
           context: .
           file: ./Dockerfile
           push: ${{ github.event_name != 'pull_request' }}
           tags: ${{ steps.prep.outputs.tags }} 
